---
title: unilur
format: gfm
---

## Aim

Convert [{unilur}](https://github.com/koncina/unilur) developed by [**Eric Koncina**](https://github.com/koncina) to a [quarto-ext](https://github.com/quarto-ext). The current package does more than the hiding/highlighting of **solution** code chunks for teaching practicals.


## Installation

``` bash
quarto install extension ginolhac/unilur
```

More details are available in Quarto docs for [managing extensions](https://quarto.org/docs/extensions/#managing-extensions).

## Usage

- **Activate** the extension by adding the following lines to your YAML header:

``` yaml
filters:
  - unilur
```

- **Solution** code blocks are either **highlighted** or ~~discarded~~ according to the `solution` Boolean and the YAML header:

``` yaml
solution: true # or false
```

Of note, if `solution` is absent, it is considered `false`.

- Add the new variable `solution` as [hashpipe, `#|`](https://quarto.org/docs/reference/cells/cells-knitr.html) to the code chunks that are part of practical answers. Otherwise, chunks are left untouched.

``` 
#| solution: true
```

See the joined [`example.qmd`](https://github.com/ginolhac/unilur/blob/main/example.qmd).

## Outputs


| Example `solution: true` | Example `solution: false` 
-------------------------- | -------------------------
![unilur-solution](img/unilur_solution.png) | ![unilur-nosolution](img/unilur_nosolution.png)

## Acknowledgements

People who developed and released extensions I got inspiration from:

-   [JJ Allaire](https://github.com/jjallaire) for [`filename`](https://github.com/quarto-ext/code-filename) extension
-   [Andrie de Vries](https://github.com/andrie) for [`reveal-auto-agenda`](https://github.com/andrie/reveal-auto-agenda) extension

Moreover:

-   [Christophe Dervieux]() for precious advises
-   [MickaÃ«l Canouil](https://github.com/mcanouil/) for maintaining the [awesome Quarto](https://github.com/mcanouil/awesome-quarto)

### TODO

-   Collapse boxes toggle like [original {unilur}](http://koncina.github.io/unilur/articles/custom-boxes.html)
-   Constant `code-collapse: true` so green frame encompasses code output?
-   Better CSS rules (`Solution` code header in main font)

### Debugging

This helped me developing this extension.

To get the intermediate markdown document:

    quarto render example.qmd -M keep-md:true

    /usr/lib/rstudio/resources/app/bin/quarto/bin/tools/pandoc -f markdown -t json -o ast.json example.md

Then visualize the Abstract Syntax Tree (AST) using [this code](https://bookdown.org/yihui/rmarkdown-cookbook/lua-filters.html)

<details><summary>pandoc AST</summary>
```{r}
#| code-fold: true
#| code-summary: "pandoc AST"
xfun:::tree(
  jsonlite::fromJSON('ast.json', simplifyVector = FALSE)
)
```
</details>